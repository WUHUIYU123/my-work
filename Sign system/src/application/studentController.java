package application;

import javafx.fxml.FXML;

import javafx.scene.control.TextField;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

import javafx.event.ActionEvent;

public class studentController {
	@FXML
	private TextField t1;
	public static String getDateTimeAsString(LocalDateTime localDateTime,String format) {
		DateTimeFormatter formatter = DateTimeFormatter.ofPattern(format);
		return localDateTime.format(formatter);
		}
	public static LocalDateTime parseStringToDateTime(String time,String format) {
		DateTimeFormatter df = DateTimeFormatter.ofPattern(format);
		return LocalDateTime.parse(time,df);
		}

	// Event Listener on Button.onAction
	@FXML
	public void but3(ActionEvent event) {//签到
		
		// TODO Autogenerated
		String driver = "com.mysql.jdbc.Driver";
		String url = "jdbc:mysql://localhost:3306/test";
		String uid = "root";
		String pwd = "root";
		Connection conn = null;
		Statement stmt = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;

//将用户名读出

		try {
			Class.forName(driver);
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			conn = DriverManager.getConnection(url, uid, pwd);
			String sql = "select number from te where id =1";
			pstmt = conn.prepareStatement(sql);
			rs = pstmt.executeQuery();
			while (rs.next()) {
				String num= rs.getString("number");
				t1.setText("");
				t1.appendText(num);
			}
			
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			try {
				rs.close();
				pstmt.close();
				conn.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

		}
		//写入时间
		LocalDateTime times=LocalDateTime.now();
		String createdate = getDateTimeAsString(times, "yyyy-MM-dd HH:mm:ss");
		try {
			Class.forName(driver);
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			conn = DriverManager.getConnection(url, uid, pwd);
			String sql = "UPDATE student SET time =? WHERE number = ?";
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1,createdate);
			pstmt.setString(2,t1.getText());
			int count = pstmt.executeUpdate();
			if (count == 1) {
				System.out.println("更新成功！");
			} else {
				System.out.println("更新失败！");
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			try {
				pstmt.close();
				conn.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

		}
		//进行读取并签到
		try {
			Class.forName(driver);
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			conn = DriverManager.getConnection(url, uid, pwd);
			String sql = "UPDATE student SET login = '是    ' WHERE number = ?";
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, t1.getText());
			int count = pstmt.executeUpdate();
			t1.setText("签到成功");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			try {
				pstmt.close();
				conn.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

		}
		
		
	}
	// Event Listener on Button.onAction
	@FXML//请假
	public void but4(ActionEvent event) {
		
		// TODO Autogenerated
		String driver = "com.mysql.jdbc.Driver";
		String url = "jdbc:mysql://localhost:3306/test";
		String uid = "root";
		String pwd = "root";
		Connection conn = null;
		Statement stmt = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;

//将用户名读出

		try {
			Class.forName(driver);
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			conn = DriverManager.getConnection(url, uid, pwd);
			String sql = "select number from te where id =1";
			pstmt = conn.prepareStatement(sql);
			rs = pstmt.executeQuery();
			while (rs.next()) {
				String num= rs.getString("number");
				t1.setText("");
				t1.appendText(num);
			}
			
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			try {
				rs.close();
				pstmt.close();
				conn.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

		}
		//写入时间
				LocalDateTime times=LocalDateTime.now();
				String createdate = getDateTimeAsString(times, "yyyy-MM-dd HH:mm:ss");
				try {
					Class.forName(driver);
				} catch (ClassNotFoundException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				try {
					conn = DriverManager.getConnection(url, uid, pwd);
					String sql = "UPDATE student SET time =? WHERE number = ?";
					pstmt = conn.prepareStatement(sql);
					pstmt.setString(1,createdate);
					pstmt.setString(2,t1.getText());
					int count = pstmt.executeUpdate();
					if (count == 1) {
						System.out.println("更新成功！");
					} else {
						System.out.println("更新失败！");
					}
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} finally {
					try {
						pstmt.close();
						conn.close();
					} catch (SQLException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}

				}
		//进行读取并请假
		try {
			Class.forName(driver);
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			conn = DriverManager.getConnection(url, uid, pwd);
			String sql = "UPDATE student SET login = '请假' WHERE number = ?";
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, t1.getText());
			int count = pstmt.executeUpdate();
			t1.setText("请假成功");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			try {
				pstmt.close();
				conn.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

		}
	}
	}
